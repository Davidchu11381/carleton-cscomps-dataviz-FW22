{"version":3,"sources":["pages/SankeyPage/index.module.css","pages/HomePage/index.module.css","pages/HomePage/topicLabels.js","pages/HomePage/components/SankeyChart.js","pages/HomePage/components/reducer.js","pages/HomePage/index.js","pages/AboutPage/index.js","components/Navbar.js","pages/DataPage/index.js","pages/SankeyPage/components/PoliticianButton.js","pages/SankeyPage/components/hooks/reducer.js","pages/SankeyPage/components/StateButton.js","pages/SankeyPage/components/GroupSelectionButton.js","pages/SankeyPage/hooks/reducer.js","pages/SankeyPage/index.js","App.js","index.js"],"names":["module","exports","buttonListing","filterSystem","line","space","buttonSpace","poliButtonSpacing","poliBox","buttonSection","stopScrolling","hide","cardArrangement","lineCenter","tweetTopicLabels","topic_1","topic_2","topic_3","topic_4","topic_5","topic_6","topic_7","topic_8","topic_9","topic_10","topic_11","topic_12","statementTopicLabels","topic_13","topic_14","topic_15","topic_16","topic_17","topic_18","topic_19","topic_20","topic_21","topic_22","topic_23","topic_24","topic_25","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","SankeyChart","_Component","props","_this","classCallCheck","possibleConstructorReturn","cid_map","group","indSankey","tweetSankey","stateSankey","inherits","createClass","formatList","_fetchData","asyncToGenerator","_callee","data","cids","cid","responseInd","resultInd","responseTweets","resultTweets","responseStatements","resultStatements","ind_topic_dict","response","_context","toConsumableArray","console","log","t0","t1","fetch","json","apply","arguments","ind_sankey_list","tweet_sankey_list","statement_sankey_list","memberName","get","industries","industry","tweet_topics","statement_topics","ind","industry_name","parseInt","total","tweet_topic_total","topic","topic_name","sankey_weight","rounded_weight","parseFloat","toFixed","statement_topic_total","_formatList","_callee2","lists","_lists","_context2","fetchData","formatListCids","formatListGroup","setState","indData","tweetData","statementData","react_default","a","createElement","Container","className","Card","Header","Body","Footer","href","id","react_google_charts_dist","width","height","chartType","loader","rootProps","data-testid","style","Component","initialState","showRep","repText","repIndex","showDem","demText","demIndex","showHouse","houseText","houseIndex","showSen","senText","senIndex","desiredSankeys","reducer","action","index","objectSpread","indexOf","splice","HomePage","_useReducer","useReducer","_useReducer2","slicedToArray","filters","dispatch","addSankey","removeSankey","useEffect","cid_map2","Map","set","Row","Col","lg","md","Button","onClick","e","currentTarget","map","components_SankeyChart","AboutUs","NavbarBand","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","DataPage","PoliticianButton","func","politician","buttonState","party","_useState","useState","_useState2","initial","setInitial","ToggleButton","variant","checked","size","onChange","person","status","compInitialState","stateInfo","states","el","createStateMap","chamberInfo","chambers","createChamberMap","partyInfo","parties","createPartyMap","compReducer","StateButton","compState","compDispatch","GroupSelectionButton","selectedPoliticians","filteredPoliticians","polList","displayPoli","sankeyReady","chamber","selectedStates","includes","delete","arrayPolList","filter","first","second","concat","inter","clear","per","SankeyPage","_useReducer3","_useReducer4","allPoliticians","allData","setAllData","fetchDelay","apiCallCount","useRef","_useState3","_useState4","isLoading","setLoading","displaySankey","full_name","current","poli","Stack","gap","ToggleButtonGroup","components_GroupSelectionButton","components_StateButton","list","buttonList","pol","components_PoliticianButton","theFilteredButtons","element","document","getElementById","scrollIntoView","behavior","npmhref","App","Fragment","dist","components_Navbar","react_router_dist","exact","path","pages_SankeyPage","AboutPage","pages_DataPage","pages_HomePage","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.619ec98b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonListing\":\"SankeyPage_buttonListing__2UUeF\",\"filterSystem\":\"SankeyPage_filterSystem__2Juqs\",\"line\":\"SankeyPage_line__1dpcr\",\"space\":\"SankeyPage_space__M-iao\",\"buttonSpace\":\"SankeyPage_buttonSpace__32210\",\"poliButtonSpacing\":\"SankeyPage_poliButtonSpacing__3mP4c\",\"poliBox\":\"SankeyPage_poliBox__1jrqm\",\"buttonSection\":\"SankeyPage_buttonSection__2ONtE\",\"stopScrolling\":\"SankeyPage_stopScrolling__1bx-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hide\":\"HomePage_hide__2JeRG\",\"cardArrangement\":\"HomePage_cardArrangement__2jGK1\",\"line\":\"HomePage_line__2KVE_\",\"lineCenter\":\"HomePage_lineCenter__3MdnE\"};","// Map of topic # to laabel for tweets\nexport const tweetTopicLabels = {\n    'topic_1' : 'Constituent Outreach',\n    'topic_2' : 'Events/Self-promotion',\n    'topic_3' : 'Honoring Public Servants',\n    'topic_4' : 'Foreign policy/border crisis',\n    'topic_5' : 'Events/Self-promotion',\n    'topic_6' : 'Partisan attacks',\n    'topic_7' : 'Healthcare & Public Health',\n    'topic_8' : 'Gun Control & Civil Rights (liberal policies)',\n    'topic_9' : 'Infrastructure & Sustainability',\n    'topic_10' : 'Judiciary & Civil Rights',\n    'topic_11' : 'Covid relief & government assistance',\n    'topic_12' : 'Fiscal policy & Inflation'\n}\n\n// Map of topic # to laabel for tweets\nexport const statementTopicLabels = {\n'topic_1' : 'Junk',\n'topic_2' : 'Debt & Spending',\n'topic_3' : 'Social Safety Net',\n'topic_4' : 'Inflation & Taxes',\n'topic_5' : 'COVID Policies & Impacts',\n'topic_6' : 'Junk',\n'topic_7' : 'Junk',\n'topic_8' : 'Judiciary',\n'topic_9' : 'Equality & Civil Rights',\n'topic_10' : 'Immigration & Border Policy',\n'topic_11' : 'Junk',\n'topic_12' : 'Healthcare & Public Health',\n'topic_13' : 'Constituent Shout-outs',\n'topic_14' : 'Junk',\n'topic_15' : 'Junk',\n'topic_16' : 'Conservation & Environmentalism',\n'topic_17' : 'Oil, gas, and energy policy',\n'topic_18' : 'Gun Control & African American Rights',\n'topic_19' : 'Hearings & Investigations',\n'topic_20' : 'War in Ukraine & Russia Policy',\n'topic_21' : 'Junk',\n'topic_22' : 'Industry Regulations (Tech, Finance, Pharma)',\n'topic_23' : 'Bipartisan Legislation',\n'topic_24' : 'Voting Rights & Election Policy',\n'topic_25' : 'Foreign Policy & Protecting Democracy Abroad'\n}","import React, { Component } from 'react';\r\nimport { Col, Row, Container, Stack, Form, Card } from 'react-bootstrap'\r\nimport Chart from 'react-google-charts';\r\nimport { tweetTopicLabels, statementTopicLabels} from '../topicLabels.js';\r\n\r\nimport style from './../index.module.css'\r\n\r\nclass SankeyChart extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.cid_map = props.cid_map\r\n    //this.cid_list = props.cid_list; //pass in cid_list as props in html\r\n    this.group = props.group\r\n    this.state = {\r\n      indSankey : [],\r\n      tweetSankey : [],\r\n      stateSankey : []\r\n    };\r\n  }\r\n\r\n  //fetch data and format list when component is created\r\n  componentDidMount() {\r\n    this.formatList();\r\n  }\r\n  \r\n  // fetch data asynchronously\r\n  async fetchData() {\r\n    if (this.group === undefined) { //cid list\r\n      var data = {}\r\n     // var cids = this.cid_list.split(',');\r\n      var cids = [ ... this.cid_map.keys() ]\r\n      // var cids = Object.keys(this.cid_map)\r\n      // console.log(this.cid_map)\r\n      console.log(\"cids\", cids)\r\n      for (let cid in cids) {\r\n        // console.log(\"cid:\", cid);\r\n        // console.log(\"politician:\", cids[cid]);\r\n\r\n        //api calls\r\n        const responseInd = await fetch('http://137.22.4.60:5001/'+ cids[cid] +'/industry');\r\n        const resultInd = await responseInd.json();\r\n        const responseTweets = await fetch('http://137.22.4.60:5001/'+ cids[cid] +'/tweet_topics');\r\n        const resultTweets = await responseTweets.json();\r\n        const responseStatements = await fetch('http://137.22.4.60:5001/'+ cids[cid] +'/statement_topics');\r\n        const resultStatements = await responseStatements.json();\r\n\r\n\r\n        var ind_topic_dict = {};\r\n        ind_topic_dict[\"industry\"] = resultInd;\r\n        ind_topic_dict[\"tweet_topics\"] = resultTweets;\r\n        ind_topic_dict[\"statement_topics\"] = resultStatements;\r\n        data[cids[cid]] = ind_topic_dict;\r\n      }\r\n      // console.log(\"this is the datain sankey\", data)\r\n      return(data)\r\n\r\n    } else { //group\r\n      const response = await fetch('http://137.22.4.60:5001/'+ this.group +'/aggregate');\r\n      const result = await response.json();\r\n      \r\n      return(result)\r\n    }\r\n  }\r\n\r\n  //format list when given a cid list\r\n  formatListCids(data) {\r\n    //var sankey_list = [['From', 'To', 'Weight']]\r\n    var ind_sankey_list = [['From', 'To', 'Weight']]\r\n    var tweet_sankey_list = [['From', 'To', 'Weight']]\r\n    var statement_sankey_list = [['From', 'To', 'Weight']]\r\n    for (let cid in data) {\r\n      var memberName = this.cid_map.get(cid)\r\n      // console.log(\"memberName:\", memberName)\r\n      // console.log(\"data[cid]:\", data[cid])\r\n      var industries = data[cid].industry.industry\r\n      var tweet_topics = data[cid].tweet_topics.tweet_topics\r\n      var statement_topics = data[cid].statement_topics.statement_topics\r\n\r\n      //add industries to sankey list, calculate total for scaling purposes\r\n      var ind_total = 0;\r\n      for (let ind in industries) {\r\n        ind_sankey_list.push([industries[ind].industry_name, memberName, parseInt(industries[ind].total)]);\r\n        ind_total  += parseInt(industries[ind].total)\r\n      }\r\n\r\n      // Tweets\r\n      // calculate topic total for scaling purposes\r\n      var tweet_topic_total = 0;\r\n      for (let topic in tweet_topics) {\r\n        tweet_topic_total += parseInt(tweet_topics[topic])\r\n      }\r\n\r\n      for (let topic in tweet_topics) {\r\n        //calculate weight to scale first\r\n        let topic_name = tweetTopicLabels[topic]\r\n        // console.log(\"topic, topic_name\", topic, topic_name)\r\n        let sankey_weight = parseInt(tweet_topics[topic]) / tweet_topic_total\r\n        let rounded_weight = parseFloat(sankey_weight.toFixed(2))\r\n        tweet_sankey_list.push([memberName, topic_name, rounded_weight]) \r\n      }\r\n\r\n      // Statements\r\n      // calculate topic total for scaling purposes\r\n      var statement_topic_total = 0;\r\n      for (let topic in statement_topics) {\r\n        statement_topic_total += parseInt(statement_topics[topic])\r\n      }\r\n\r\n      for (let topic in statement_topics) {\r\n        let topic_name = statementTopicLabels[topic]\r\n        //calculate weight to scale first\r\n        let sankey_weight = parseInt(statement_topics[topic]) / statement_topic_total\r\n        let rounded_weight = parseFloat(sankey_weight.toFixed(2))\r\n        statement_sankey_list.push([memberName, topic_name, rounded_weight]) \r\n      }\r\n    }\r\n    return [ind_sankey_list, tweet_sankey_list, statement_sankey_list]\r\n  }\r\n\r\n  //format list when given a group\r\n  formatListGroup(data) {\r\n    //var sankey_list = [['From', 'To', 'Weight']] \r\n    var industries = data.industry\r\n    var tweet_topics = data.tweet_topics\r\n    var statement_topics = data.statement_topics\r\n    var ind_sankey_list = [['From', 'To', 'Weight']]\r\n    var tweet_sankey_list = [['From', 'To', 'Weight']]\r\n    var statement_sankey_list = [['From', 'To', 'Weight']]\r\n\r\n    // Industries\r\n    for (let ind in industries) {\r\n      ind_sankey_list.push([industries[ind].industry_name, data.group, parseInt(industries[ind].total)]);\r\n    }\r\n\r\n    // Tweets\r\n    // calculate topic total for scaling purposes\r\n    var tweet_topic_total = 0;\r\n    for (let topic in tweet_topics) {\r\n      tweet_topic_total += parseInt(tweet_topics[topic])\r\n    }\r\n\r\n    for (let topic in tweet_topics) {\r\n      let topic_name = tweetTopicLabels[topic]\r\n      // console.log(\"topic, topic_name\", topic, topic_name)\r\n      //calculate weight to scale first\r\n      let sankey_weight = parseInt(tweet_topics[topic]) / tweet_topic_total\r\n      tweet_sankey_list.push([data.group, topic_name, sankey_weight]) \r\n    }\r\n\r\n    // Statements\r\n    // calculate topic total for scaling purposes\r\n    var statement_topic_total = 0;\r\n    for (let topic in statement_topics) {\r\n      statement_topic_total += parseInt(statement_topics[topic])\r\n    }\r\n\r\n    for (let topic in statement_topics) {\r\n      let topic_name = statementTopicLabels[topic]\r\n      //calculate weight to scale first\r\n      let sankey_weight = parseInt(statement_topics[topic]) / statement_topic_total\r\n      statement_sankey_list.push([data.group, topic_name, sankey_weight]) \r\n    }\r\n  \r\n    return([ind_sankey_list, tweet_sankey_list, statement_sankey_list])\r\n  }\r\n\r\n  //put data into list format for google charts sankey diagrams\r\n  async formatList() {\r\n    var data = await this.fetchData() // wait for data to fetch\r\n    var ind_sankey_list = []\r\n    var tweet_sankey_list = []\r\n    var statement_sankey_list = []\r\n\r\n    if (this.group === undefined) { //cid list\r\n      let lists = this.formatListCids(data)\r\n      ind_sankey_list = lists[0]\r\n      tweet_sankey_list = lists[1]\r\n      statement_sankey_list = lists[2]\r\n    } else { // group\r\n      let lists = this.formatListGroup(data)\r\n      ind_sankey_list = lists[0]\r\n      tweet_sankey_list = lists[1]\r\n      statement_sankey_list = lists[2]\r\n    }\r\n\r\n    const indSankey = ind_sankey_list\r\n    this.setState({indSankey})\r\n    const tweetSankey = tweet_sankey_list\r\n    this.setState({tweetSankey})\r\n    const stateSankey = statement_sankey_list\r\n    this.setState({stateSankey})\r\n  } \r\n\r\n  render() {\r\n    let indData = this.state.indSankey\r\n    // console.log(\"indData:\", indData)\r\n    let tweetData = this.state.tweetSankey\r\n    let statementData = this.state.stateSankey\r\n    // console.log(\"tweetData:\", tweetData)\r\n   \r\n    return (\r\n      <Container className=\"mt-5 pt-3 mb-3 pb-3\">\r\n      <div>\r\n    \r\n\r\n        {/* the legend about funding */} \r\n          <div className=\"mt-5 mb-5\">\r\n            <Card>\r\n            <Card.Header className=\"lead\"><strong>Industry Fundings and Politicians </strong></Card.Header>\r\n            <Card.Body className=\"lead\">This shows the top 10 industries by contribution total (in USD) for each selected congressperson. Note that each congressperson receives money from more than 10 industries, so the totals for each congressperson do not include contributions outside of those 10.</Card.Body>\r\n            <Card.Footer><a href=\"/data#funding\">More Information About Industry Funding Data</a></Card.Footer>\r\n            </Card>\r\n          </div>\r\n        \r\n        {/* the sankey */}\r\n            {/* <p>Funding</p> */}\r\n            <a id=\"sankeyStart\"></a>\r\n            <Chart\r\n            width={'200'}\r\n            height={'75vh'}\r\n            chartType=\"Sankey\"\r\n            loader={<div>Loading Chart</div>}\r\n            data={indData}\r\n            rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        <div className={style.lineCenter}>\r\n          {/* <div className={style.line}></div> */}\r\n        </div>\r\n        \r\n        <div className=\"mt-5 mb-5\">\r\n              <Card>\r\n                <Card.Header className=\"lead\"><strong>Politicians and Tweet Topics</strong></Card.Header>\r\n                <Card.Body className=\"lead\" >This shows the breakdown of the distribution of topics found in each congressperson’s Tweets. For each congressperson, we query their Tweets from the database and then calculate the proportion of each topic’s frequency out of the total 12 topics.</Card.Body>\r\n                <Card.Footer><a href=\"/data#tweets\">More Information About Tweet Data</a></Card.Footer>\r\n              </Card>\r\n          </div>\r\n            {/* <p>Tweets</p> */}\r\n            <Chart\r\n              width={'200'}\r\n              height={'100vh'}\r\n              chartType=\"Sankey\"\r\n              loader={<div>Loading Chart</div>}\r\n              data={tweetData}\r\n              rootProps={{ 'data-testid': '1' }}\r\n            />\r\n\r\n        <div className={style.lineCenter}>\r\n          {/* <div className={style.line}></div> */}\r\n        </div>\r\n\r\n        <div className=\"mt-5 mb-5\">\r\n            <Card>\r\n            <Card.Header className=\"lead\"><strong>Politicians and Statement Topics</strong></Card.Header>\r\n            <Card.Body className=\"lead\">This shows the breakdown of the distribution of topics found in each congressperson’s congressional statements. For each congressperson, we query their statements and then calculate the proportion of each topic’s frequency out of the total 19 topics.</Card.Body>\r\n            <Card.Footer><a href=\"/data#statements\">More Information About Statement Data</a></Card.Footer>\r\n            </Card>\r\n\r\n          </div>\r\n            {/* <p>Statements</p> */}\r\n            <Chart\r\n              width={'200'}\r\n              height={'100vh'}\r\n              chartType=\"Sankey\"\r\n              loader={<div>Loading Chart</div>}\r\n              data={statementData}\r\n              rootProps={{ 'data-testid': '1' }}\r\n            />\r\n      </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\nexport default SankeyChart","/**\r\n * initial state for home page\r\n * reducer.js\r\n */\r\n\r\n\r\nexport const initialState = {\r\n    // need a variable for each type\r\n    showRep: false,\r\n    repText: [\"Show Republicans\", \"Hide Republicans\"],\r\n    repIndex: 0,\r\n    showDem: false,\r\n    demText: [\"Show Democrats\", \"Hide Democrats\"],\r\n    demIndex: 0,\r\n    showHouse: false,\r\n    houseText: [\"Show House of Rep\", \"Hide House of Rep\"],\r\n    houseIndex: 0,\r\n    showSen: false,\r\n    senText: [\"Show Senate\", \"Hide Senate\"],\r\n    senIndex: 0,\r\n\r\n    // need a variable to keep track of selected\r\n    desiredSankeys: [],\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n\tconst value = action.value;\r\n    let index;\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\tcase 'ADD_VIZ':\r\n            state.desiredSankeys.push(value);\r\n            if (value === \"Republican\") {\r\n                return {\r\n                    ...state,\r\n                    showRep: true,\r\n                    repIndex: 1,\r\n                }\r\n            } else if (value === \"Democrat\") {\r\n                return {\r\n                    ...state,\r\n                    showDem: true,\r\n                    demIndex: 1,\r\n                }\r\n            } else if (value === \"Representative\") {\r\n                return {\r\n                    ...state,\r\n                    showHouse: true,\r\n                    houseIndex: 1,\r\n                }\r\n            } else if (value === \"Senator\") {\r\n                return {\r\n                    ...state,\r\n                    showSen: true,\r\n                    senIndex: 1,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                }\r\n            }\r\n\t\t\r\n        case 'REMOVE_VIZ':\r\n            index = state.desiredSankeys.indexOf(value);\r\n\t\t\tstate.desiredSankeys.splice(index, 1);\r\n            if (value === \"Republican\") {\r\n                return {\r\n                    ...state,\r\n                    showRep: false,\r\n                    repIndex: 0,\r\n                }\r\n            } else if (value === \"Democrat\") {\r\n                return {\r\n                    ...state,\r\n                    showDem: false,\r\n                    demIndex: 0,\r\n                }\r\n            } else if (value === \"Representative\") {\r\n                return {\r\n                    ...state,\r\n                    showHouse: false,\r\n                    houseIndex: 0,\r\n                }\r\n            } else if (value === \"Senator\") {\r\n                return {\r\n                    ...state,\r\n                    showSen: false,\r\n                    senIndex: 0,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                }\r\n            }\r\n        \r\n        case 'MODIFY_DISPLAY':\r\n\r\n            return {\r\n                ...state,\r\n            }\r\n        \r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useState, useReducer } from 'react';\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\n// import YoutubeEmbed from './components/YoutubeEmbed';\r\nimport SankeyChart from './components/SankeyChart';\r\n// import { renderMatches, useNavigate } from 'react-router-dom';\r\nimport style from \"./index.module.css\"\r\n\r\nimport { reducer, initialState } from './components/reducer';\r\n\r\n\r\nfunction HomePage() {\r\n\r\n    const [filters, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const addSankey = (id) => {\r\n\r\n        dispatch({\r\n            type: 'ADD_VIZ',\r\n            value: id,\r\n        });\r\n    };\r\n\r\n    const removeSankey = (id) => {\r\n        dispatch({\r\n            type: 'REMOVE_VIZ',\r\n            value: id,\r\n        });\r\n    }\r\n\r\n    // function displaySankeys() {\r\n    //     if (filters.desiredSankeys.length !== 0) {\r\n    //         filters.desiredSankeys.map(type => {\r\n    //             return (<SankeyChart group={type}/>)\r\n    //         })\r\n    //     }\r\n    //     return (<p>This is where the sankeys would appear</p>)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        console.log(filters);\r\n    }, [filters]);\r\n\r\n    const cid_map_test = {\"N00003389\": \"Jane Smith\", \"N00007360\": \"John Doe\"}\r\n    const cid_map2 = new Map();\r\n    cid_map2.set(\"N00003389\", \"Jane Smith\");\r\n    cid_map2.set(\"N00007360\", \"John Doe\");\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"HomePage\">\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"pt-3 h3\">\r\n                            Overview\r\n                        </div>\r\n                        <div className=\"pt-3\" >\r\n                            <p className=\"lead\">\r\n                                MoneyFlow is a web application that lets you explore the relationships between funding sources and speech\r\n                                for members of congress. We have gathered data on funding broken down by industry, statements made on the floor\r\n                                of congress, and tweets for each politician. We then performed topic modeling on the statements and tweets\r\n                                to gather quantitative data about what topics politicians speek about.\r\n                            </p>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col>\r\n                        <div className=\"pt-3 h4\">\r\n                            <p>How To Use</p>\r\n                        </div>\r\n                        <div className=\"pt-3 mb-3 pb-3 lead\">\r\n                            <p>You can explore these relationships through Sankey diagrams, which show the flows of money\r\n                            to congresspeople and congresspeople to topics. This Overview Page contains diagrams depicting\r\n                            different subsets of politicians, like Republicans or Senators</p>\r\n                            <p>If you'd like to explore further funding flows, you can \r\n                            head to <a href=\"/congress_data\">Filter by Congress</a> to curate your own filters and \r\n                            see the resulting diagrams.\r\n                            </p>\r\n                        </div>\r\n                    \r\n                    </Col>\r\n                </Row>\r\n                {/*<SankeyChart cid_list=\"N00007360,N00003389,N00031820\"/> */}\r\n                <Row lg={4} md= {4}>\r\n                    <Button \r\n                        id=\"Republican\"\r\n                        onClick={(e) => \r\n                        !filters.showRep ? addSankey(e.currentTarget.id) : removeSankey(e.currentTarget.id)}\r\n                        >    \r\n                        {filters.repText[filters.repIndex]}\r\n                    </Button>  {' '}\r\n                    <Button \r\n                        id=\"Democrat\"\r\n                        onClick={(e) => \r\n                        !filters.showDem ? addSankey(e.currentTarget.id) : removeSankey(e.currentTarget.id)}\r\n                        >    \r\n                        {filters.demText[filters.demIndex]}\r\n                    </Button> {' '}\r\n                    <Button \r\n                        id=\"Representative\"\r\n                        onClick={(e) => \r\n                        !filters.showHouse ? addSankey(e.currentTarget.id) : removeSankey(e.currentTarget.id)}\r\n                        >    \r\n                        {filters.houseText[filters.houseIndex]}\r\n                    </Button> {' '}\r\n                    <Button \r\n                        id=\"Senator\"\r\n                        onClick={(e) => \r\n                        !filters.showSen ? addSankey(e.currentTarget.id) : removeSankey(e.currentTarget.id)}\r\n                        >    \r\n                        {filters.senText[filters.senIndex]}\r\n                    </Button>\r\n                </Row>\r\n                {filters.desiredSankeys.map(type => {\r\n                    return (<SankeyChart group={type}/>)\r\n                    })}\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n\r\n// OLD CODE\r\n\r\n    // const navigate = useNavigate();\r\n    // const switchtoIndustryPage = () => {\r\n    //     console.log(\"switching to industry page\");\r\n    //     navigate('/industry');\r\n    // }\r\n    \r\n    // const switchtoCongressPage = () => {\r\n    //     console.log(\"switching to congress page\");\r\n    //     navigate('/congress')\r\n    // }","import React from 'react'\r\nimport {Col, Row, Container} from 'react-bootstrap'\r\nfunction AboutUs() {\r\n    return (\r\n    <Container>\r\n        <Row>\r\n        <Col>\r\n            <div className=\"h1 mb-3 mt-3\">About Us</div>\r\n            <div className=\"lead mt-3 me-2\"> \r\n                <p>We are a team of 6 computer scientists \r\n                with a mission to increase government transparency \r\n                and accountability through effective data visualization.</p>\r\n                <p>There is an overwhelming amount of data out there, and it can be hard\r\n                    to find what you are really looking for. We hope this site\r\n                    offers a clear and interesting way\r\n                    to explore who is funding our congresspeople, and what these politicians are talking about. \r\n                </p>\r\n            </div>\r\n        </Col>\r\n        <Col>\r\n            <div className=\"h1 mb-3 mt-3\">Team</div>\r\n            <div className=\"lead mt-3\"> \r\n            <Row className=\"mb-3\">\r\n                <Col>\r\n                <p>Anna</p>\r\n                </Col>\r\n                <Col>\r\n                <p>Ben</p>\r\n                </Col>\r\n                <Col>\r\n                <p>Chisom</p>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n                <Col>\r\n                <p>David</p>\r\n                </Col>\r\n                <Col>\r\n                <p>Kevin</p>\r\n                </Col>\r\n                <Col>\r\n                <p>Lita</p>\r\n                </Col>   \r\n            </Row> \r\n            </div>\r\n        </Col>\r\n        </Row>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from \"react\";\nimport {Container, Nav, Navbar} from 'react-bootstrap';\n\nfunction NavbarBand() {\n    return (\n    \n        <Navbar className=\"p-3\" bg=\"light\" expand=\"lg\">\n        <Container>\n            <Navbar.Brand href=\"/\">FollowTheMoney</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n                {/* <Nav.Link href=\"http://localhost:3000/\">Home</Nav.Link> */}\n                <Nav.Link href=\"http://olin312-04.mathcs.carleton.edu:3000/\"> Home </Nav.Link>\n                {/* <Nav.Link href=\"http://localhost:3000/industry\">Industry</Nav.Link> */}\n                {/* <Nav.Link href=\"http://localhost:3000/congress\">Congress</Nav.Link> */}\n                {/* <Nav.Link href=\"http://localhost:3000/data\">The Data</Nav.Link> */}\n                <Nav.Link href=\"http://olin312-04.mathcs.carleton.edu:3000/data\"> The Data </Nav.Link>\n                {/* <Nav.Link href=\"http://localhost:3000/overview\"> Overview </Nav.Link> */}\n                {/* <Nav.Link href=\"http://localhost:3000/barchart\">Bar Chart</Nav.Link> */}\n                {/* <Nav.Link href=\"http://localhost:3000/aboutUs\">AboutUs</Nav.Link> */}\n                <Nav.Link href=\"http://olin312-04.mathcs.carleton.edu:3000/aboutUs\">About Us</Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n        </Container>\n        </Navbar>\n    \n    );\n}\n  \nexport default NavbarBand;","import React, { useEffect } from 'react';\r\n// import { useState, useReducer } from 'react';\r\nimport {Container, Row, Col, Button} from 'react-bootstrap';\r\n// import SankeyChart from './components/SankeyChart';\r\n// import style from \"./index.module.css\"\r\n\r\nfunction DataPage() {\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"DataPage\">\r\n                <Row><div></div></Row>\r\n                <Row>\r\n                    <a id=\"funding\"></a>\r\n                    <div className=\"pt-3 h2\" id=\"funding\">Funding Data</div>\r\n                    <p className=\"lead\">\r\n                        Funding data was collected from the OpenSecrets API. This data consists \r\n                        of the contributions to each congressperson in the 117th Congress from \r\n                        the top ten contributing industries for that congressperson, based on \r\n                        contributions made in the 2020 election cycle. OpenSecrets groups \r\n                        contributions into 83 industries, and the dollar amounts displayed \r\n                        in our Funding visualization reflect the total contributions from all \r\n                        individuals, corporations, or PACs affiliated with the specified \r\n                        industry to the given congressperson. For more information, \r\n                        see <a href=\"https://www.opensecrets.org/industries/\">https://www.opensecrets.org/industries/</a>.\r\n                    </p>\r\n                    <a id=\"tweets\"></a>\r\n                    <div className=\"pt-3 h2\" id=\"tweets\">Tweet Data</div>\r\n                    <p className=\"lead\">\r\n                    Tweet data was collected from the Twitter API. We collected all available \r\n                    Tweets for each congressperson with a public Twitter account in the 117th \r\n                    Congress. To extract the topic categories displayed in our visualizations, \r\n                    we fit a Latent Dirichlet Allocation (LDA) statistical language model to a \r\n                    subset of the Tweets consisting of one hundred randomly selected Tweets for \r\n                    each congressperson. For each Tweet in this subset, the LDA model assigned \r\n                    probabilities that the Tweet was about one of our twelve topics. We labeled \r\n                    the topics by manually examining the tweets that were assigned high \r\n                    probabilities and gleaning their topics. The proportions displayed in the \r\n                    Tweets visualization are calculated as follows: \r\n                    <ol>\r\n                        <li>\r\n                        For topic X, count the number of Tweets where the highest probability is assigned \r\n                        to topic X and that probability is at least 0.15 (a threshold we set after manually \r\n                        inspecting the coherence of topics with decreasing probability).\r\n                        </li>\r\n                        <li>\r\n                        Divide this number by the total number of Tweets that assigned at least \r\n                        0.15 probability to some topic.\r\n                        </li>\r\n                    </ol>\r\n                    </p>\r\n                    <a id=\"statements\"></a>\r\n                    <div className=\"pt-3 h2\" id=\"statements\">Statement Data</div>\r\n                    <p className=\"lead\">\r\n                    Statement data was collected from the Congressional Record API and consists of \r\n                    statements made by congress people during the 117th Congress on the House or \r\n                    Senate floors. Like the Tweet data, we intuited the statement topics by fitting \r\n                    a LDA model to the statement data; unlike the Tweet data, we categorized the \r\n                    statements into twenty-five topics. We followed the same manual procedure to \r\n                    label the statement topics, and determined a classification threshold of 0.2 \r\n                    using the same inspection procedure we used to find the 0.15 threshold for the \r\n                    Tweet data. The proportions displayed in the Statements visualization are \r\n                    calculated similarly to the proportions in the Tweets visualization.\r\n                    </p>\r\n                </Row>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DataPage;\r\n\r\n// OLD CODE\r\n\r\n    // const navigate = useNavigate();\r\n    // const switchtoIndustryPage = () => {\r\n    //     console.log(\"switching to industry page\");\r\n    //     navigate('/industry');\r\n    // }\r\n    \r\n    // const switchtoCongressPage = () => {\r\n    //     console.log(\"switching to congress page\");\r\n    //     navigate('/congress')\r\n    // }","/**\r\n * PoliticianButton.js\r\n * PoliticianButton for Sankey filtering system\r\n */\r\n\r\n// import styles from './HeaderBar.module.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { ToggleButton } from 'react-bootstrap';\r\n\r\nfunction PoliticianButton( data ) {    \r\n    const dispatch = data.func;\r\n    const info = data.politician;\r\n    const buttonState = data.state;\r\n    const party = info.party;\r\n\r\n    function partyType () {\r\n        if (party === \"Republican\") {\r\n            return 'outline-danger'\r\n        } else if (party === \"Democrat\"){\r\n            return 'outline-primary';\r\n        } else {\r\n            return 'outline-success';\r\n        }\r\n    }\r\n\r\n    // buttons start out false => not selected\r\n    const [initial, setInitial] = useState(buttonState);\r\n\r\n    function updateList (person, status) {\r\n        \r\n        if (status === false) {\r\n            console.log(\"IN THE STATUS FINDOUT\", status);\r\n            dispatch({\r\n                type: 'REMOVE_PERSON',\r\n                value: person.id,\r\n            });\t\r\n        } else {\r\n            dispatch({\r\n                type: 'ADD_PERSON',\r\n                value: person.id,\r\n            });\t\r\n        };\r\n        dispatch({\r\n            type: 'DISPLAY_SANKEY', \r\n            value: \"\",\r\n            buttonState: false,\r\n        });\r\n    };\r\n    \r\n    return (\r\n        <ToggleButton\r\n            className=\"m-1\"\r\n            id={info.id}\r\n            type=\"checkbox\"\r\n            variant={partyType()}\r\n            checked={initial}\r\n            size=\"sm\"\r\n            value=\"1\"\r\n            onChange={(e) => {\r\n                setInitial(e.currentTarget.checked);\r\n                updateList(info, e.currentTarget.checked);\r\n                // partyType();\r\n            }}\r\n        >\r\n            {info.name}\r\n        </ToggleButton>\r\n    );\r\n}\r\n\r\nexport default PoliticianButton;","/**\r\n * initial state for filtering buttons\r\n * reducer.js\r\n */\r\n\r\nfunction createChamberMap() {\r\n    var chambers = new Map();\r\n    chambers.set(\"sen\", false);\r\n    chambers.set(\"rep\", false);\r\n    return chambers;\r\n}\r\n\r\nfunction createPartyMap() {\r\n    var parties = new Map();\r\n    [\"Republican\", \"Democrat\", \"Independent\"].map((el) => {\r\n        parties.set(el, false)\r\n    })\r\n    return parties;\r\n}\r\n\r\nfunction createStateMap() {\r\n    var states = new Map();\r\n    [ 'AK', 'AL', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'FL', 'GA',\r\n    'HI', 'IA', 'ID', 'IL', 'IN', 'KS', 'KY', 'LA', 'MA', 'MD', 'ME',\r\n    'MI', 'MN', 'MO', 'MS', 'MT', 'NC', 'ND', 'NE', 'NH', 'NJ', 'NM',\r\n    'NV', 'NY', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX',\r\n    'UT', 'VA', 'VT', 'WA', 'WI', 'WV', 'WY'].map((el) => {\r\n        states.set(el, false);\r\n    })\r\n    return states;\r\n}\r\n\r\nexport const compInitialState = {\r\n    stateInfo: createStateMap(),\r\n    chamberInfo: createChamberMap(),\r\n    partyInfo: createPartyMap(),\r\n};\r\n\r\nexport const compReducer = (state, action) => {\r\n\tconsole.log(\"inside the mini reducer:\", action.type, action.value);\r\n\tconst value = action.value;\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\tcase 'CLEAR_EVERYTHING':\r\n            state.chamberInfo.forEach((val, key) => state.chamberInfo.set(key, false));\r\n            state.partyInfo.forEach((val, key) => state.partyInfo.set(key, false));\r\n            state.stateInfo.forEach((val, key) => state.stateInfo.set(key, false));\r\n            return {\r\n                ...state,\r\n            }\r\n\r\n\t\tcase 'UPDATE_CHAMBER':\r\n            if (state.chamberInfo.get(value)) {\r\n                state.chamberInfo.set(value, false);\r\n            } else {\r\n                state.chamberInfo.set(value, true);\r\n            }\r\n            console.log(\"in minireducer\", state.chamberInfo);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n        \r\n        case 'UPDATE_PARTY':\r\n            if (state.partyInfo.get(value)) {\r\n                state.partyInfo.set(value, false);\r\n            } else {\r\n                state.partyInfo.set(value, true);\r\n            }\r\n            console.log(\"in minireducer\", state.partyInfo);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t}\r\n        \r\n        case 'UPDATE_STATES':\r\n            if (state.stateInfo.get(value)) {\r\n                state.stateInfo.set(value, false);\r\n            } else {\r\n                state.stateInfo.set(value, true);\r\n            }\r\n            console.log(\"in minireducer\", state.stateInfo);\r\n            return {\r\n                ...state,\r\n            }\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};","/**\r\n * PoliticianButton.js\r\n * PoliticianButton for Sankey filtering system\r\n * Last updated 03-22-22\r\n */\r\n\r\n// import styles from './HeaderBar.module.css';\r\nimport React from 'react';\r\nimport { useReducer } from 'react';\r\nimport { ToggleButton } from 'react-bootstrap';\r\nimport { compReducer, compInitialState } from './hooks/reducer';\r\n\r\n\r\nfunction StateButton( data ) {\r\n    const dispatch = data.func;\r\n    const info = data.state;\r\n    // const [initial, setInitial] = useState(false);\r\n    const [compState, compDispatch] = useReducer(compReducer, compInitialState);\r\n\r\n    function updateList () {\r\n        dispatch({\r\n            type: 'UPDATE_STATES',\r\n            value: info,\r\n        })\r\n        compDispatch({\r\n            type: 'UPDATE_STATES',\r\n            value: info,\r\n        })\r\n    };\r\n    \r\n    return (\r\n        <ToggleButton\r\n            className=\"m-1\"\r\n            id={info}\r\n            size=\"sm\"\r\n            type=\"checkbox\"\r\n            variant=\"outline-primary\"\r\n            // checked={initial}\r\n            checked={compState.stateInfo.get(info)}\r\n            value=\"1\"\r\n            onChange={(e) => {\r\n                // setInitial(e.currentTarget.checked);\r\n                updateList();\r\n            }}\r\n        >\r\n            {info}\r\n        </ToggleButton>\r\n    );\r\n}\r\n\r\nexport default StateButton;","/**\r\n * GroupSelectionButton.js\r\n * GroupSelectionButton gathers user input for data visualization\r\n */\r\n\r\n// import styles from './HeaderBar.module.css';\r\nimport React from 'react';\r\nimport { useReducer } from 'react';\r\nimport { ToggleButton } from 'react-bootstrap';\r\nimport { compReducer, compInitialState } from './hooks/reducer';\r\n\r\nfunction GroupSelectionButton( data ) {    \r\n    const dispatch = data.func;\r\n    const type = data.type;\r\n    // const [initial, setInitial] = useState(false);\r\n    const [compState, compDispatch] = useReducer(compReducer, compInitialState);\r\n\r\n    function determineType(){\r\n        if (type === \"chamber\") {\r\n            return compState.chamberInfo.get(data.id);\r\n        } else if (type === \"party\") {\r\n            return compState.partyInfo.get(data.id);\r\n        }\r\n    }\r\n\r\n    function updateList () {\r\n        if (type === \"chamber\") {\r\n            dispatch({\r\n                type: 'UPDATE_CHAMBER',\r\n                value: data.id,\r\n            })\r\n            compDispatch({\r\n                type: 'UPDATE_CHAMBER',\r\n                value: data.id,\r\n            })\r\n        } else if (type === \"party\") {\r\n            dispatch({\r\n                type: 'UPDATE_PARTY',\r\n                value: data.id,\r\n            })\r\n            compDispatch({\r\n                type: 'UPDATE_PARTY',\r\n                value: data.id,\r\n            })\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <ToggleButton\r\n            className=\"m-1\"\r\n            id={data.id}\r\n            type=\"checkbox\"\r\n            // variant=\"outline-secondary\"\r\n            variant=\"outline-primary\"\r\n            checked={determineType()}\r\n            // checked={initial}\r\n            size=\"sm\"\r\n            value=\"1\"\r\n            onChange={(e) => {\r\n                // setInitial(e.currentTarget.checked);\r\n                updateList();\r\n            }}\r\n        >\r\n            {data.value}\r\n        </ToggleButton>\r\n    );\r\n}\r\n\r\nexport default GroupSelectionButton;","/**\r\n * initial state for home page\r\n * reducer.js\r\n */\r\n\r\nexport const initialState = {\r\n\r\n\t// used for display\r\n\tselectedPoliticians: new Map(),\r\n\tfilteredPoliticians: new Map(),\r\n\tpolList: new Map(),\r\n\tdisplayPoli: new Map (),\r\n\tsankeyReady: false,\r\n\tbuttonState: false,\r\n\r\n\t// used for filtering\r\n    party: [],\r\n    chamber: [],\r\n    selectedStates: [],\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n\tconsole.log(action.type, action.value);\r\n\tconst value = action.value;\r\n\tlet index;\r\n\r\n\tswitch (action.type) {\r\n\r\n\t\tcase 'DISPLAY_SANKEY':\r\n\t\t\tconsole.log(\"this is hte buttonstate\", state.buttonState);\r\n\t\t\tconsole.log(\"the value\", value);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdisplayPoli: value,\r\n\t\t\t\tsankeyReady: action.buttonState,\r\n\t\t\t}\r\n\r\n\t\tcase 'UPDATE_PARTY':\r\n\t\t\tif (state.party.includes(value)) {\r\n\t\t\t\tindex = state.party.indexOf(value);\r\n\t\t\t\tstate.party.splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tstate.party.push(value);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsankeyReady: false,\r\n\t\t\t}\r\n\t\t\r\n\t\tcase 'UPDATE_CHAMBER':\r\n\t\t\tif (state.chamber.includes(value)) {\r\n\t\t\t\tindex = state.chamber.indexOf(value);\r\n\t\t\t\tstate.chamber.splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tstate.chamber.push(value);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsankeyReady: false,\r\n\t\t\t}\r\n\t\t\r\n\t\tcase 'UPDATE_STATES':\r\n\t\t\tif(state.selectedStates.includes(value)) {\r\n\t\t\t\tindex = state.selectedStates.indexOf(value);\r\n\t\t\t\tstate.selectedStates.splice(index, 1);\r\n\t\t\t} else {\r\n\t\t\t\tstate.selectedStates.push(value);\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsankeyReady: false,\r\n\t\t\t}\r\n\t\t\r\n\t\t// related to selected politician window\r\n\t\tcase 'ADD_PERSON':\r\n\t\t\tstate.selectedPoliticians.set(value, state.polList.get(value));\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsankeyReady: false,\r\n\t\t\t}\r\n\t\t\r\n\t\tcase 'REMOVE_PERSON':\r\n\t\t\tstate.selectedPoliticians.delete(value);\r\n\t\t\tconsole.log(\"INSIDE REMOVE PERSON:\", state.selectedPoliticians, state.selectedPoliticians.size);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsankeyReady: false,\r\n\t\t\t}\r\n\t\t\r\n\t\tcase 'DISPLAY_BUTTONS': \r\n\t\t\tvar arrayPolList = [ ...state.polList ];\r\n\r\n\t\t\tif (state.chamber.length === 1) {\r\n\t\t\t\tarrayPolList = arrayPolList.filter((el) => el[1].type.includes(state.chamber[0]));\r\n\t\t\t}\r\n\r\n\t\t\tif (state.party.length === 1) {\r\n\t\t\t\tarrayPolList = arrayPolList.filter((el) => el[1].party.includes(state.party[0]));\r\n\t\t\t} else if (state.party.length === 2) {\r\n\t\t\t\tvar first = arrayPolList.filter((el) => el[1].party.includes(state.party[0]));\r\n\t\t\t\tvar second = arrayPolList.filter((el) => el[1].party.includes(state.party[1]));\r\n\t\t\t\tarrayPolList = first.concat(second);\r\n\t\t\t}\r\n\r\n\t\t\tif (state.selectedStates.length !== 0) {\r\n\t\t\t\tlet total = [];\r\n\t\t\t\tlet inter;\r\n\t\t\t\tstate.selectedStates.map((state) => {\r\n\t\t\t\t\tinter = arrayPolList.filter((el) => el[1].state.includes(state));\r\n\t\t\t\t\ttotal = total.concat(inter);\r\n\t\t\t\t})\r\n\t\t\t\tarrayPolList = total;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tstate.selectedPoliticians.clear();\r\n\t\t\tarrayPolList.forEach(per => state.selectedPoliticians.set(per[0], per[1]));\r\n\t\t\tstate.filteredPoliticians.clear();\r\n\t\t\tarrayPolList.forEach(per => state.filteredPoliticians.set(per[0], per[1]));\r\n\t\t\t// state.selectedPoliticians.forEach((value, key) => state.filteredPoliticians.delete(key));\r\n\t\t\t\r\n\t\t\treturn {\r\n\t\t\t    ...state,\r\n\t\t\t}\r\n\t\t\r\n\t\tcase 'CLEAR_FILTER':\r\n\t\t\tstate.selectedPoliticians.clear();\r\n\t\t\tstate.filteredPoliticians.clear();\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsankeyReady: false,\r\n\t\t\t\tparty: [],\r\n\t\t\t\tchamber: [],\r\n\t\t\t\tselectedStates: [],\r\n\t\t\t}\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n// OLD CODE\r\n\r\n\t// case 'ADD_STATE':\r\n\t// \tif (state.selectedStates.includes(value)) {\r\n\t// \t\treturn {\r\n\t// \t\t\t...state,\r\n\t// \t\t}\r\n\t// \t} else {\r\n\t// \t\tstate.selectedStates.push(value);\r\n\t// \t\treturn {\r\n\t// \t\t\t...state,\r\n\t// \t\t}\r\n\t// \t}\t\r\n\r\n\t// case 'REMOVE_STATE':\r\n\t// \tindex = state.selectedStates.indexOf(value);\r\n\t// \tstate.selectedStates.splice(index, 1);\r\n\t// \treturn {\r\n\t// \t\t...state,\r\n\t// \t}\r\n","import React from 'react'\r\nimport { Col, Row, Container, Stack, Button, ButtonGroup, ToggleButtonGroup } from 'react-bootstrap'\r\nimport { useNavigate, useLocation } from 'react-router';\r\nimport SankeyChart from '../HomePage/components/SankeyChart';\r\nimport { useEffect, useReducer, useState, useRef } from 'react';\r\nimport PoliticianButton from './components/PoliticianButton';\r\nimport StateButton from './components/StateButton';\r\nimport GroupSelectionButton from './components/GroupSelectionButton';\r\nimport style from \"./index.module.css\"\r\n\r\nimport { reducer, initialState } from './hooks/reducer';\r\nimport { compReducer, compInitialState } from './components/hooks/reducer';\r\n\r\n// TALK ABOUT IN COMPS TOMORROW\r\n// when click on the line between fields == info?\r\n// illustrates backing of politicians (aka lobbying)\r\n\r\nfunction SankeyPage() {\r\n\r\n    const [filters, dispatch] = useReducer(reducer, initialState);\r\n    const [compStuff, compDispatch] = useReducer(compReducer, compInitialState);\r\n    // const navigate = useNavigate();\r\n    const allPoliticians = new Map(); \r\n    const [allData, setAllData] = useState(null);\r\n    const fetchDelay = [];\r\n    const apiCallCount = useRef(0);\r\n    const [isLoading, setLoading] = useState(false);\r\n    // const scrollRef = useRef(0);\r\n\r\n    const stateAbbrv = [ 'AK', 'AL', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'FL', 'GA',\r\n    'HI', 'IA', 'ID', 'IL', 'IN', 'KS', 'KY', 'LA', 'MA', 'MD', 'ME',\r\n    'MI', 'MN', 'MO', 'MS', 'MT', 'NC', 'ND', 'NE', 'NH', 'NJ', 'NM',\r\n    'NV', 'NY', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX',\r\n    'UT', 'VA', 'VT', 'WA', 'WI', 'WV', 'WY'];\r\n\r\n    function displaySankey() {\r\n        if (filters.selectedPoliticians.size !== 0) {\r\n            let data = new Map();\r\n            filters.selectedPoliticians.forEach((el) => {\r\n                data.set(el.id, el.full_name);\r\n            });\r\n            dispatch({\r\n                type: 'DISPLAY_SANKEY',\r\n                value: data,\r\n                buttonState: true,\r\n            })\r\n        }\r\n    }\r\n\r\n    // const timer = setTimeout(() => {\r\n    //     console.log('This will run after 1 second!')\r\n    //   }, 1000);\r\n    //   return () => clearTimeout(timer);\r\n    // }\r\n    \r\n    useEffect(() => {\r\n        if (isLoading) {\r\n            displaySankey();\r\n            // const timer = setTimeout(() => {\r\n            //     console.log('This will run after 1 second!')\r\n            // }, 1000);\r\n            // return () => clearTimeout(timer);\r\n            setLoading(false);\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const loading = () => setLoading(true);\r\n\r\n    function theFilteredButtons() {\r\n        let list = [ ...filters.filteredPoliticians ];\r\n        let buttonList = [];\r\n        list.map((pol) => {\r\n            buttonList.push(\r\n            <PoliticianButton politician={{name: pol[1].full_name, id: pol[0], party: pol[1].party}} func={dispatch} state={true}></PoliticianButton>\r\n            );\r\n        })\r\n        return buttonList;\r\n    }\r\n\r\n    const displayButtons = () => {\r\n        dispatch({\r\n            type: 'DISPLAY_BUTTONS',\r\n            value: \"\",\r\n        })\r\n    }\r\n\r\n    const clearFilter = () => {\r\n        dispatch({\r\n            type: 'CLEAR_FILTER',\r\n            value: \"\",\r\n        })\r\n        compDispatch({\r\n            type: 'CLEAR_EVERYTHING',\r\n            value: \"\",\r\n        })\r\n    }\r\n\r\n    const handleClickScroll = () => {\r\n        displaySankey();\r\n        const element = document.getElementById('charts');\r\n        if (element) {\r\n            element.scrollIntoView({ behavior: 'smooth'});\r\n        }\r\n    }\r\n\r\n    // collecting data for politicians needed for filtering\r\n    useEffect(() => {\r\n        // fetch('http://137.22.4.60:5001/cid_to_summary', { mode: 'no-cors' })\r\n        fetch('http://137.22.4.60:5001/cid_to_summary')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setAllData(data.data);\r\n        })\r\n        apiCallCount.current = 1;\r\n        fetchDelay.push(\"done\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (apiCallCount.current === 1 && allData !== null) {\r\n            for (var poli in allData) {\r\n                allPoliticians.set(poli, allData[poli]);\r\n            }\r\n            filters.polList = allPoliticians;\r\n        }\r\n    }, [fetchDelay]);\r\n\r\n    useEffect(() => {\r\n        console.log(\"in index.js:\", filters);\r\n    }, [filters]);\r\n   \r\n    return (\r\n    <Container className=\"mb-3\">\r\n        <p className=\"pt-3 mb-3 h3\">What is FollowTheMoney?</p>\r\n\r\n        <p className=\"lead\">\r\n            FollowTheMoney is a web application that lets you explore the relationships between funding sources and speech\r\n            for members of Congress. We have gathered data on funding broken down by industry, statements made on the floor\r\n            of Congress, and tweets for each politician. We then performed topic modeling on the statements and tweets\r\n            to gather quantitative data about what topics politicians speak about.\r\n        </p>\r\n\r\n        <p className=\"lead\">You can explore these relationships through Sankey diagrams, which show the flows of money\r\n        to congresspeople and congresspeople to topics.</p>\r\n\r\n        <p className=\"lead mb-4\">If you'd like to learn more about the data that's being represented, head to <a href=\"/data\">our data collection page</a>.\r\n        </p>\r\n        <p className=\"mt-4 mb-3 h5\"> <strong>Try Out the Filter Below </strong></p>\r\n        <p className=\"lead mb-2\">\r\n                First, <strong>filter</strong> for the chamber(s), party(s) and/or state(s) that you are interested in.\r\n        </p> \r\n        <p className=\"lead mb-2\">\r\n                If you wish to edit your group of politicians, simply click on their names from the box on the right, \r\n                and they will disappear. If you wish to clear the entire group, click <strong>Clear Selection</strong>.\r\n        </p>\r\n        <p className=\"lead mb-2\">\r\n            Finally, once you are satisfied with your group of politicians, click on <strong>Display Visualization(s) Below </strong>\r\n            to see Sankey Diagram(s).\r\n            These diagrams give information on <strong>industry fundings</strong>, and on <strong>political topics</strong> found in <strong>statements</strong>, and <strong> tweets</strong> belonging to the politicians in congress.\r\n        </p>\r\n        <a id=\"filter_system\"></a>\r\n        <br></br>\r\n        <p>\r\n            <strong>Note:</strong> If more than 10 politicians are selected, the representation of the data becomes\r\n            quite convulated and can be confusing to interpret.\r\n        </p>\r\n        <br></br>\r\n        <div>\r\n            <div>\r\n                <Row>\r\n                    <Col>\r\n                        <Stack gap={1}>\r\n                            <Row lg={2} md={2}>\r\n                                <Col>\r\n                                    <div className=\"pt-3 h5\">By Chamber</div>\r\n                                    <div className={style.buttonSpace}>\r\n                                        <Row>\r\n                                            <ToggleButtonGroup type=\"checkbox\">\r\n                                                <Stack>\r\n                                                    <Row>\r\n                                                    <GroupSelectionButton type=\"chamber\" id=\"sen\" value=\"Senate\" func={dispatch}></GroupSelectionButton>\r\n                                                    </Row><Row>\r\n                                                    <GroupSelectionButton type=\"chamber\" id=\"rep\" value=\"House\" func={dispatch}></GroupSelectionButton>\r\n                                                    </Row>\r\n                                                </Stack>\r\n                                            </ToggleButtonGroup>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className=\"pt-3 h5\">By Party</div>\r\n                                        <Row>\r\n                                        <ToggleButtonGroup type=\"checkbox\">\r\n                                            <Stack>\r\n                                                <GroupSelectionButton type=\"party\" id=\"Republican\" value=\"Republican\" func={dispatch}></GroupSelectionButton>\r\n                                                <GroupSelectionButton type=\"party\" id=\"Democrat\" value=\"Democrat\" func={dispatch}></GroupSelectionButton>\r\n                                                <GroupSelectionButton type=\"party\" id=\"Independent\" value=\"Independent\" func={dispatch}></GroupSelectionButton>\r\n                                            </Stack>\r\n                                        </ToggleButtonGroup>\r\n                                        </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Stack>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"pt-3 h5\">By State</div>\r\n                                    {stateAbbrv.map(state => {\r\n                                        return (<StateButton state={state} filters={filters} func={dispatch}></StateButton>)\r\n                                    })}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"ms-4\">\r\n                        <div className={style.buttonSection}>\r\n                            <div>\r\n                                <Row>\r\n                                    <p className=\"m-3 h5\">Politicians Based on Filtering</p>\r\n                                </Row>\r\n                                <Row>\r\n                                    <div className={style.buttonListing}>\r\n                                        <Row lg={5} md={4}>\r\n                                            {theFilteredButtons()}\r\n                                        </Row>\r\n                                    </div>           \r\n                                <Button \r\n                                    // className=\"mb-4 mt-4 ps-5 pe-5\" \r\n                                    className=\"mt-2\"\r\n                                    onClick={displayButtons}>\r\n                                    Filter\r\n                                </Button>            \r\n                                <Button className=\"mt-2\"\r\n                                    variant=\"danger\"\r\n                                    onClick={clearFilter}>\r\n                                        Clear Selection\r\n                                    </Button>\r\n                                </Row>\r\n                            </div> \r\n                            <Row className=\"mt-2 mb-4\">\r\n                                    <Button\r\n                                        // className=\"btn-success ps-5 pe-5\"\r\n                                        variant=\"success\"\r\n                                        onClick={handleClickScroll}\r\n                                        // onClick={!isLoading? loading : null}\r\n                                        // disabled={isLoading}\r\n                                        npmhref=\"#sankeys\"\r\n                                        >\r\n                                            {/* {isLoading? 'Loading...' : 'Display Visualization(s) Below'} */}\r\n                                            Display Visualization(s) Below\r\n                                    </Button>\r\n                                {/* {filters.sankeyReady? <p className=\"lead\"><center><strong>Scroll down to see the data!</strong></center></p>: null} */}\r\n                            </Row>   \r\n\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <div id=\"charts\">\r\n                <Container className=\"mt-5\">\r\n                    <Row className=\"mt-5 pt-5\">\r\n                        {/* {filters.sankeyReady? window.scroll(): null} */}\r\n                        <a id=\"sankeys\"></a>\r\n                        {filters.sankeyReady? <SankeyChart cid_map={filters.displayPoli}/> : null}\r\n                    </Row>\r\n                    <div className={style.space}></div>\r\n                    <Row>\r\n                        {filters.sankeyReady? <Button href=\"#filter_system\">Back to Filter System</Button> : null}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n        <br></br>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default SankeyPage;\r\n\r\n\r\n// OLD CODE\r\n\r\n// function filterItems(arr, query) {\r\n//     return arr.filter((el) => el.toLowerCase().includes(query.toLowerCase()));\r\n// }\r\n\r\n// const updateStateList = (event) => {\r\n//     if (event.target.checked) {\r\n//         dispatch({\r\n//             type: 'ADD_STATE',\r\n//             value: event.target.id,\r\n//         })\r\n//     } else {\r\n//         dispatch({\r\n//             type: 'REMOVE_STATE',\r\n//             value: event.target.id,\r\n//         })\r\n//     }\r\n// }\r\n\r\n// const handleFilter = (event) => {        \r\n//     var eligibleStates = filterItems(stateList, event.target.value);\r\n\r\n//     if (event.code === \"Enter\") {\r\n//         event.target.value = \"\";\r\n//         if (eligibleStates.length === 1) {\r\n//             dispatch({\r\n//                 type: 'ADD_STATE',\r\n//                 value: eligibleStates[0],\r\n//             });\r\n//             dispatch({\r\n//                 type: 'UPDATE_BUTTONS', \r\n//                 party: filters.party,\r\n//                 chamber: filters.party,\r\n//                 selectedStates: filters.selectedStates,\r\n//             });\r\n//         };\r\n//     };\r\n// };\r\n\r\n\r\n// const stateList = ['Alabama','Alaska','Arizona','Arkansas',\r\n//     'California','Colorado','Connecticut','Delaware','Florida',\r\n//     'Georgia','Hawaii','Idaho','Illinois','Indiana','Iowa',\r\n//     'Kansas','Kentucky','Louisiana','Maine','Maryland','Massachusetts',\r\n//     'Michigan','Minnesota','Mississippi','Missouri','Montana','Nebraska',\r\n//     'Nevada','New Hampshire','New Jersey','New Mexico','New York',\r\n//     'North Carolina','North Dakota','Ohio','Oklahoma','Oregon','Pennsylvania',\r\n//     'Rhode Island','South Carolina','South Dakota','Tennessee','Texas','Utah',\r\n//     'Vermont','Virginia','Washington','West Virginia','Wisconsin','Wyoming'];\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route} from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport HomePage from './pages/HomePage/index.js'\nimport AboutUs from './pages/AboutPage/index.js'\nimport NavbarBand from './components/Navbar.js'\n// import IndustryPage from './pages/IndustryPage';\n// import PersonPage from './pages/PersonPage';\n// import CongressPage from './pages/CongressPage'\n// import BarChartPage from './pages/BarChartPage';\nimport DataPage from './pages/DataPage';\nimport SankeyPage from './pages/SankeyPage';\n\n\nfunction App() {\n    return (\n    <>\n        <Router>\n            <NavbarBand />\n            <Routes>\n                <Route exact path='/' element={<SankeyPage />} />\n                <Route path='/aboutUs' element={<AboutUs />} />\n                {/* <Route path='/industry' element={<IndustryPage />} /> */}\n                {/* <Route path='/individual' element={<PersonPage />} /> */}\n                {/* <Route path='/barchart' element={<BarChartPage />} /> */}\n                {/* <Route path='/congress' element={<CongressPage />} /> */}\n                <Route path='/data' element={<DataPage />} />\n                <Route path='/overview' element={<HomePage />} />\n            </Routes>\n        </Router>\n    </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}